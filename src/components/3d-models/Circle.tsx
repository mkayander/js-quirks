/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.4 public/assets/models/circle_scene.gltf -t -o src/components/gltf/circle.tsx
*/

import { useGLTF } from "@react-three/drei";
import * as THREE from "three";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Circle: THREE.Mesh;
  };
  materials: {
    ["Material.001"]: THREE.MeshStandardMaterial;
  };
};

const path = "/assets/models/circle_scene.gltf";

export function CircleModel(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(path) as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <pointLight
        intensity={4}
        decay={2}
        color="#bce4ff"
        position={[3.592, 5.939, 3.134]}
        rotation={[-1.839, 0.602, 1.932]}
      />
      <pointLight
        intensity={1}
        decay={2}
        position={[-6.44, -5.881, 2.343]}
        rotation={[-1.839, 0.602, 1.932]}
      />
      <mesh
        geometry={nodes.Circle.geometry}
        material={materials["Material.001"]}
      />
    </group>
  );
}

useGLTF.preload(path);
